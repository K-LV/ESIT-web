-- MySQL Script generated by MySQL Workbench
-- 10/19/16 20:00:02
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema esit
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `esit` ;

-- -----------------------------------------------------
-- Schema esit
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `esit` DEFAULT CHARACTER SET utf8 ;
USE `esit` ;

-- -----------------------------------------------------
-- Table `esit`.`Employee`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `esit`.`Employee` ;

CREATE TABLE IF NOT EXISTS `esit`.`Employee` (
  `employeeId` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `firstName` VARCHAR(50) NOT NULL,
  `lastName` VARCHAR(50) NOT NULL,
  `email` VARCHAR(50) NOT NULL,
  `homePhone` VARCHAR(15) NULL,
  `cellPhone` VARCHAR(15) NULL,
  `hireDate` DATE NOT NULL,
  `isActive` TINYINT(1) NOT NULL,
  `password` VARCHAR(30) NOT NULL,
  `role` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`employeeId`),
  UNIQUE INDEX `employeeId_UNIQUE` (`employeeId` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `esit`.`Program`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `esit`.`Program` ;

CREATE TABLE IF NOT EXISTS `esit`.`Program` (
  `programId` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `programName` VARCHAR(50) NOT NULL,
  `description` VARCHAR(250) NOT NULL,
  `price` DECIMAL NOT NULL,
  PRIMARY KEY (`programId`),
  UNIQUE INDEX `programId_UNIQUE` (`programId` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `esit`.`Customer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `esit`.`Customer` ;

CREATE TABLE IF NOT EXISTS `esit`.`Customer` (
  `customerId` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `firstName` VARCHAR(50) NOT NULL,
  `lastName` VARCHAR(50) NOT NULL,
  `email` VARCHAR(50) NOT NULL,
  `homePhone` VARCHAR(25) NULL,
  `cellPhone` VARCHAR(25) NULL,
  `businessPhone` VARCHAR(25) NULL,
  `enbridgeNum` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`customerId`),
  UNIQUE INDEX `customerId_UNIQUE` (`customerId` ASC),
  UNIQUE INDEX `enbridgeNum_UNIQUE` (`enbridgeNum` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `esit`.`Sale`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `esit`.`Sale` ;

CREATE TABLE IF NOT EXISTS `esit`.`Sale` (
  `saleId` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `customer` INT UNSIGNED NOT NULL,
  `salesRep` INT UNSIGNED NULL,
  `program` INT UNSIGNED NULL,
  `rentalAgreement` VARCHAR(2083) NULL,
  `PADForm` VARCHAR(2083) NULL,
  PRIMARY KEY (`saleId`),
  UNIQUE INDEX `saleId_UNIQUE` (`saleId` ASC),
  INDEX `salesRep_idx` (`salesRep` ASC),
  INDEX `program_idx` (`program` ASC),
  INDEX `customer_idx` (`customer` ASC),
  CONSTRAINT `fk_sale_employee`
    FOREIGN KEY (`salesRep`)
    REFERENCES `esit`.`Employee` (`employeeId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sale_program`
    FOREIGN KEY (`program`)
    REFERENCES `esit`.`Program` (`programId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sale_customer`
    FOREIGN KEY (`customer`)
    REFERENCES `esit`.`Customer` (`customerId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `esit`.`Installation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `esit`.`Installation` ;

CREATE TABLE IF NOT EXISTS `esit`.`Installation` (
  `instalationId` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `customer` INT UNSIGNED NOT NULL,
  `installer` INT UNSIGNED NOT NULL,
  `sale` INT UNSIGNED NOT NULL,
  `installationCert` VARCHAR(2083) NULL,
  PRIMARY KEY (`instalationId`),
  UNIQUE INDEX `instalationId_UNIQUE` (`instalationId` ASC),
  INDEX `sale_idx` (`sale` ASC),
  INDEX `customer_idx` (`customer` ASC),
  INDEX `installer_idx` (`installer` ASC),
  CONSTRAINT `fk_installation_sale`
    FOREIGN KEY (`sale`)
    REFERENCES `esit`.`Sale` (`saleId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_installation_customer`
    FOREIGN KEY (`customer`)
    REFERENCES `esit`.`Customer` (`customerId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_installation_employee`
    FOREIGN KEY (`installer`)
    REFERENCES `esit`.`Employee` (`employeeId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `esit`.`Product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `esit`.`Product` ;

CREATE TABLE IF NOT EXISTS `esit`.`Product` (
  `productId` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `productName` VARCHAR(50) NOT NULL,
  `number` VARCHAR(50) NOT NULL,
  `serialCode` INT NOT NULL,
  PRIMARY KEY (`productId`),
  UNIQUE INDEX `productId_UNIQUE` (`productId` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `esit`.`Address`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `esit`.`Address` ;

CREATE TABLE IF NOT EXISTS `esit`.`Address` (
  `addressId` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `street` VARCHAR(50) NOT NULL,
  `unit` VARCHAR(10) NULL,
  `city` VARCHAR(80) NOT NULL,
  `province` VARCHAR(30) NOT NULL,
  `postalCode` VARCHAR(6) NOT NULL,
  PRIMARY KEY (`addressId`),
  UNIQUE INDEX `addressId_UNIQUE` (`addressId` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `esit`.`Property`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `esit`.`Property` ;

CREATE TABLE IF NOT EXISTS `esit`.`Property` (
  `propertyId` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `address` INT UNSIGNED NULL,
  `customer` INT UNSIGNED NULL,
  `sqFootage` INT NOT NULL,
  `bathrooms` INT NOT NULL,
  `residents` INT NOT NULL,
  `hasPool` TINYINT(1) NOT NULL,
  PRIMARY KEY (`propertyId`),
  UNIQUE INDEX `propertyId_UNIQUE` (`propertyId` ASC),
  UNIQUE INDEX `address_UNIQUE` (`address` ASC),
  INDEX `customer_idx` (`customer` ASC),
  CONSTRAINT `fk_property_customer`
    FOREIGN KEY (`customer`)
    REFERENCES `esit`.`Customer` (`customerId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_property_address`
    FOREIGN KEY (`address`)
    REFERENCES `esit`.`Address` (`addressId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `esit`.`ProgramProduct`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `esit`.`ProgramProduct` ;

CREATE TABLE IF NOT EXISTS `esit`.`ProgramProduct` (
  `program` INT UNSIGNED NOT NULL,
  `product` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`program`, `product`),
  INDEX `product_idx` (`product` ASC),
  CONSTRAINT `fk_program_programProduct`
    FOREIGN KEY (`program`)
    REFERENCES `esit`.`Program` (`programId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_product_programProduct`
    FOREIGN KEY (`product`)
    REFERENCES `esit`.`Product` (`productId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `esit`.`Employee`
-- -----------------------------------------------------
START TRANSACTION;
USE `esit`;
INSERT INTO `esit`.`Employee` (`employeeId`, `firstName`, `lastName`, `email`, `homePhone`, `cellPhone`, `hireDate`, `isActive`, `password`, `role`) VALUES (1, 'administrator', 'administrator', 'administrator@esit.com', '647-244-7718', '647-244-7718', '2016-10-19', true, 'admin_password', 'admin');
INSERT INTO `esit`.`Employee` (`employeeId`, `firstName`, `lastName`, `email`, `homePhone`, `cellPhone`, `hireDate`, `isActive`, `password`, `role`) VALUES (2, 'Todd', 'Burgess', 'todd@filterbutler.com', '647-625-8277', '647-625-8277', '2016-10-19', true, 'todd_password', 'manager');
INSERT INTO `esit`.`Employee` (`employeeId`, `firstName`, `lastName`, `email`, `homePhone`, `cellPhone`, `hireDate`, `isActive`, `password`, `role`) VALUES (3, 'Thyrone', 'Cameron', 'thyrone@filterbutler.com', '905-621-1225', '905-621-1225', '2016-10-19', true, 'thyron_password', 'salesperson');
INSERT INTO `esit`.`Employee` (`employeeId`, `firstName`, `lastName`, `email`, `homePhone`, `cellPhone`, `hireDate`, `isActive`, `password`, `role`) VALUES (4, 'Nazeem', 'Mohammed', 'nazeem@filterbutler.com', '416-121-9928', '416-121-9928', '2016-10-19', true, 'nazeem_password', 'installer');
INSERT INTO `esit`.`Employee` (`employeeId`, `firstName`, `lastName`, `email`, `homePhone`, `cellPhone`, `hireDate`, `isActive`, `password`, `role`) VALUES (5, 'Ivan', 'Medunic', 'ivan@filterbutler.com', '647-627-4411', '647-627-4411', '2016-10-19', true, 'ivan_password', 'installer');
INSERT INTO `esit`.`Employee` (`employeeId`, `firstName`, `lastName`, `email`, `homePhone`, `cellPhone`, `hireDate`, `isActive`, `password`, `role`) VALUES (6, 'Daniel', 'MacDonald', 'daniel@filterbutler.com', '905-819-4371', '905-819-4371', '2016-10-19', true, 'daniel_password', 'salesperson');
INSERT INTO `esit`.`Employee` (`employeeId`, `firstName`, `lastName`, `email`, `homePhone`, `cellPhone`, `hireDate`, `isActive`, `password`, `role`) VALUES (7, 'Chad', 'Pilkey', 'chad@filterbutler.com', '416-647-2318', '416-647-2318', '2016-10-19', true, 'chad_password', 'installer');
INSERT INTO `esit`.`Employee` (`employeeId`, `firstName`, `lastName`, `email`, `homePhone`, `cellPhone`, `hireDate`, `isActive`, `password`, `role`) VALUES (8, 'Danny', 'Perrone', 'danny@filterbutler.com', '416-285-1584', '416-285-1584', '2016-10-19', true, 'danny_password', 'salesperson');

COMMIT;


-- -----------------------------------------------------
-- Data for table `esit`.`Program`
-- -----------------------------------------------------
START TRANSACTION;
USE `esit`;
INSERT INTO `esit`.`Program` (`programId`, `programName`, `description`, `price`) VALUES (1, 'Whole Home Filter', 'Filter + Bottling Kit', 34.95);
INSERT INTO `esit`.`Program` (`programId`, `programName`, `description`, `price`) VALUES (2, 'Whole Home Descaler', 'D-Scaler + Bottling Kit', 34.95);
INSERT INTO `esit`.`Program` (`programId`, `programName`, `description`, `price`) VALUES (3, 'Whole Home Combo', 'Filter + D-Scaler + Bottling Kit', 54.90);

COMMIT;


-- -----------------------------------------------------
-- Data for table `esit`.`Customer`
-- -----------------------------------------------------
START TRANSACTION;
USE `esit`;
INSERT INTO `esit`.`Customer` (`customerId`, `firstName`, `lastName`, `email`, `homePhone`, `cellPhone`, `businessPhone`, `enbridgeNum`) VALUES (1, 'Matthew', 'Marangoni', 'matt@esit.com', '905-664-2241', '905-782-1547', '416-981-5050', '1234567890');
INSERT INTO `esit`.`Customer` (`customerId`, `firstName`, `lastName`, `email`, `homePhone`, `cellPhone`, `businessPhone`, `enbridgeNum`) VALUES (2, 'Klever', 'Loza Vega', 'klever@esit.com', '', '647-238-5564', '905-463-5555', '1237687612');
INSERT INTO `esit`.`Customer` (`customerId`, `firstName`, `lastName`, `email`, `homePhone`, `cellPhone`, `businessPhone`, `enbridgeNum`) VALUES (3, 'Oleksandr', 'Zhurbenko', 'alex@esit.com', '', '416-152-9911', '', '8723772636');
INSERT INTO `esit`.`Customer` (`customerId`, `firstName`, `lastName`, `email`, `homePhone`, `cellPhone`, `businessPhone`, `enbridgeNum`) VALUES (4, 'Emile', 'Ohan', 'emile.ohan@esit.com', '', '', '416-491-5050 ext. 33374', '2263774929');
INSERT INTO `esit`.`Customer` (`customerId`, `firstName`, `lastName`, `email`, `homePhone`, `cellPhone`, `businessPhone`, `enbridgeNum`) VALUES (5, 'Mohamed', 'Kassim', 'mohamed.kassim@esit.com', '', '', '416-491-5050 ext. 33373', '1237792888');

COMMIT;


-- -----------------------------------------------------
-- Data for table `esit`.`Sale`
-- -----------------------------------------------------
START TRANSACTION;
USE `esit`;
INSERT INTO `esit`.`Sale` (`saleId`, `customer`, `salesRep`, `program`, `rentalAgreement`, `PADForm`) VALUES (1, 1, 3, 2, NULL, NULL);
INSERT INTO `esit`.`Sale` (`saleId`, `customer`, `salesRep`, `program`, `rentalAgreement`, `PADForm`) VALUES (2, 3, 6, 1, NULL, NULL);
INSERT INTO `esit`.`Sale` (`saleId`, `customer`, `salesRep`, `program`, `rentalAgreement`, `PADForm`) VALUES (3, 2, 8, 3, NULL, NULL);
INSERT INTO `esit`.`Sale` (`saleId`, `customer`, `salesRep`, `program`, `rentalAgreement`, `PADForm`) VALUES (4, 5, 3, 1, NULL, NULL);
INSERT INTO `esit`.`Sale` (`saleId`, `customer`, `salesRep`, `program`, `rentalAgreement`, `PADForm`) VALUES (5, 4, 6, 3, NULL, NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `esit`.`Installation`
-- -----------------------------------------------------
START TRANSACTION;
USE `esit`;
INSERT INTO `esit`.`Installation` (`instalationId`, `customer`, `installer`, `sale`, `installationCert`) VALUES (1, 2, 4, 3, '');
INSERT INTO `esit`.`Installation` (`instalationId`, `customer`, `installer`, `sale`, `installationCert`) VALUES (2, 3, 5, 2, NULL);
INSERT INTO `esit`.`Installation` (`instalationId`, `customer`, `installer`, `sale`, `installationCert`) VALUES (3, 5, 7, 4, NULL);
INSERT INTO `esit`.`Installation` (`instalationId`, `customer`, `installer`, `sale`, `installationCert`) VALUES (4, 1, 5, 1, NULL);
INSERT INTO `esit`.`Installation` (`instalationId`, `customer`, `installer`, `sale`, `installationCert`) VALUES (5, 4, 4, 5, NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `esit`.`Product`
-- -----------------------------------------------------
START TRANSACTION;
USE `esit`;
INSERT INTO `esit`.`Product` (`productId`, `productName`, `number`, `serialCode`) VALUES (1, 'Whole Home Filter', '9810001', 17716820);
INSERT INTO `esit`.`Product` (`productId`, `productName`, `number`, `serialCode`) VALUES (2, 'Whole Home D-Scaler', '9810002', 18812630);
INSERT INTO `esit`.`Product` (`productId`, `productName`, `number`, `serialCode`) VALUES (3, 'Whole Home Combo', '9810003', 12392280);
INSERT INTO `esit`.`Product` (`productId`, `productName`, `number`, `serialCode`) VALUES (4, 'Water Conservation System', '9810004', 12816370);
INSERT INTO `esit`.`Product` (`productId`, `productName`, `number`, `serialCode`) VALUES (5, 'Installation Kit', '9810005', 12399840);
INSERT INTO `esit`.`Product` (`productId`, `productName`, `number`, `serialCode`) VALUES (6, 'Bottling Kit', '9810006', 12387260);

COMMIT;


-- -----------------------------------------------------
-- Data for table `esit`.`Address`
-- -----------------------------------------------------
START TRANSACTION;
USE `esit`;
INSERT INTO `esit`.`Address` (`addressId`, `street`, `unit`, `city`, `province`, `postalCode`) VALUES (1, '70 The Pond Road', NULL, 'North York', 'Ontario', 'M3J3M6');
INSERT INTO `esit`.`Address` (`addressId`, `street`, `unit`, `city`, `province`, `postalCode`) VALUES (2, '25 Avenue Road', '301', 'Toronto', 'Ontario', 'M5R1A8');
INSERT INTO `esit`.`Address` (`addressId`, `street`, `unit`, `city`, `province`, `postalCode`) VALUES (3, '7191 Yonge Street', '21A', 'Markham', 'Ontario', 'L4J1VA');
INSERT INTO `esit`.`Address` (`addressId`, `street`, `unit`, `city`, `province`, `postalCode`) VALUES (4, '9855 Jane Street', NULL, 'Maple', 'Ontario', 'L6A3N9');
INSERT INTO `esit`.`Address` (`addressId`, `street`, `unit`, `city`, `province`, `postalCode`) VALUES (5, '980 Steeles Avenue West', '251', 'Etobicoke', 'Ontario', 'M9W6Y3');

COMMIT;


-- -----------------------------------------------------
-- Data for table `esit`.`Property`
-- -----------------------------------------------------
START TRANSACTION;
USE `esit`;
INSERT INTO `esit`.`Property` (`propertyId`, `address`, `customer`, `sqFootage`, `bathrooms`, `residents`, `hasPool`) VALUES (1, 1, 5, 1281, 2, 4, DEFAULT);
INSERT INTO `esit`.`Property` (`propertyId`, `address`, `customer`, `sqFootage`, `bathrooms`, `residents`, `hasPool`) VALUES (2, 2, 2, 2014, 1, 5, true);
INSERT INTO `esit`.`Property` (`propertyId`, `address`, `customer`, `sqFootage`, `bathrooms`, `residents`, `hasPool`) VALUES (3, 4, 1, 1620, 4, 3, true);
INSERT INTO `esit`.`Property` (`propertyId`, `address`, `customer`, `sqFootage`, `bathrooms`, `residents`, `hasPool`) VALUES (4, 3, 4, 980, 2, 3, false);
INSERT INTO `esit`.`Property` (`propertyId`, `address`, `customer`, `sqFootage`, `bathrooms`, `residents`, `hasPool`) VALUES (5, 5, 3, 4000, 3, 1, true);

COMMIT;


-- -----------------------------------------------------
-- Data for table `esit`.`ProgramProduct`
-- -----------------------------------------------------
START TRANSACTION;
USE `esit`;
INSERT INTO `esit`.`ProgramProduct` (`program`, `product`) VALUES (1, 1);
INSERT INTO `esit`.`ProgramProduct` (`program`, `product`) VALUES (1, 4);
INSERT INTO `esit`.`ProgramProduct` (`program`, `product`) VALUES (1, 5);
INSERT INTO `esit`.`ProgramProduct` (`program`, `product`) VALUES (1, 6);
INSERT INTO `esit`.`ProgramProduct` (`program`, `product`) VALUES (2, 2);
INSERT INTO `esit`.`ProgramProduct` (`program`, `product`) VALUES (2, 4);
INSERT INTO `esit`.`ProgramProduct` (`program`, `product`) VALUES (2, 5);
INSERT INTO `esit`.`ProgramProduct` (`program`, `product`) VALUES (2, 6);
INSERT INTO `esit`.`ProgramProduct` (`program`, `product`) VALUES (3, 3);
INSERT INTO `esit`.`ProgramProduct` (`program`, `product`) VALUES (3, 4);
INSERT INTO `esit`.`ProgramProduct` (`program`, `product`) VALUES (3, 5);
INSERT INTO `esit`.`ProgramProduct` (`program`, `product`) VALUES (3, 6);

COMMIT;

